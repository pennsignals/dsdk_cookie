{% raw %}name: release
on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      deploy: ${{ steps.info.outputs.deploy }}
      version: ${{ steps.info.outputs.version }}

    steps:
      - id: checkout
        uses: actions/checkout@v4

      - id: info
        run: |
          ./scripts/info.sh >> $GITHUB_OUTPUT

      - id: publish
        run: |
          ./scripts/publish.sh \
            --build true \
            --password "${{ secrets.GITHUB_TOKEN }}" \
            --version "${{ steps.info.outputs.version }}"

  prepare:
    needs: build
    # matrix.deploy shows up in the GUI
    strategy:
      matrix:
        deploy: [ '${{ needs.build.outputs.deploy }}' ]
    runs-on: ubuntu-latest
    # if prepare must happen on the runner
    # runs-on: [self-hosted, nomad, '${{ needs.build.outputs.deploy }}' ]
    steps:
      - id: prepare
        run: |
          echo 'deploy: ${{ needs.build.outputs.deploy }}; version: ${{ needs.build.outputs.version }}'

  deploy:
    needs: [build, prepare]
    runs-on: [self-hosted, nomad, '${{ needs.build.outputs.deploy }}' ]
    steps:
      - id: checkout
        uses: actions/checkout@v4

{% endraw %}
      - id: consul
        run: |
          ./scripts/consul.sh \
            --src ./predict/local/configuration.yaml \
            --dst pennsignals/{{ cookiecutter.name }}/predict/configuration.yaml
{% raw %}

      - id: nomad
        run: |
          ./scripts/nomad.sh \
            --src ./predict/nomad \
            --dst ./nomad \
            --version "${{ needs.build.outputs.version }}"

      - id: release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        with:
          files: nomad.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  results:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - id: results
        if: ${{ needs.deploy.result != 'success' }}
        run: exit 1
{% endraw %}
